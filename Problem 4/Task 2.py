import re
# this code is same but in this file we calculate the time how much time take the program to find the Occurrences
# the string
import timeit

# this is the note the start time for program to count the time in which time program calculate the most frequent number
start = timeit.default_timer()
# initializing string
Pattern = "TCCCGAAGTGTGGAGTGTGGCAGTGTGGAGTGTGGTAGTGTGGCGCCCTCAGTGTGGAGTGTGGACAGTGTGGTAATCCTAGGAGTGTGGTGGCCGAACAGTGTGGTAGTGTGGAAGTGTGGAGTGTGGTAGTGTGGGAGTGTGGGATAGTGTGGAAGAAGTGTGGAGTGTGGGAGTGTGGGTTAGTGTGGAAAGTGTGGCATGAGTGTGGAGTGTGGGAGTGTGGTGGCTAGTGTGGAAGTGTGGGCTTTGAGTGTGGAGTGTGGGGCTATAGTGTGGAGTGTGGAGTGTGGGAGTGTGGATCCTGAGTGTGGGCTAGTGTGGAAGTGTGGCCCATTTACGGAGTGTGGCCAGTGTGGAGTGTGGTCGCAAGTGTGGCGAGTGTGGAGTGTGGAGTGTGGGCAGTGTGGAGTGTGGTTAGTGTGGAGTGTGGTAGTGTGGGAAAGTGTGGAAGTGTGGGAAGGAAGTGTGGATTAGTGTGGTAACTGTAGTGTGGAGTGTGGTACGCTCGCTCCAGTGTGGATGAGACCAGTGTGGATATGAGTGTGGGAAGTGTGGAATCCAAGTGTGGCAGTGTGGTGCTTAGTGTGGAGTGTGGCAAAGTGTGGGGAGTGTGGAGTGTGGCTAAAGTGTGGAGTGTGGCCTCACGAGTGTGGGGCGATCTCGTACGTAGCCACAATCAAGTGTGGAGTGTGGGGAGGGAGTGTGGTGTTAGTGTGGAAGTGTGGTCAGTGTGGGAGTGTGGAGTGTGGAGAGTGTGGTGCAGACTTAAGTGTGGCCAAGTGTGGAGTGTGGAGTGTGGGTCGAGACTAGTGTGGGAGGAAGTGTGGATTTAGTGTGGAAGTGTGGTCTGGAGTGTGGTAAAGTGTGGCCGAGTGTGGCAGTGTGGTTCGGTAGTGTGGTAGTGTGGTAAGTGTGGGAGTGTGGTAGTGTGGACGGAGTGTGGTAGTGTGGAGTGTGGTAAGTGTGGTATACACGTGATTAAGTGTGGGAATGCCCAGTGTGGAGTGTGGTAGTGTGGAGTGTGGAGAGTGTGGCGAGTGTGGAAAGTGTGGCGCAGTGTGGGAGTGTGGAGTGTGGTCGTAGCCGTCGAGGCCTCCAGTGTGGGTCTAACCAGTGTGGTGACAGTGTGGTGAGAGTGTGGAGTGTGGGCAGTAGAGTGTGGCAGTGTGGAGTGTGGCCCAAGTGTGGAGTGTGGAAGAAGTGTGGGCAAGTGTGGGAAAGTGTGGCAGTGTGGAGTGTGGAGTGTGGCCAGACCGAGTTAGTGTGGAAGTAGTGTGGACGCAATAAGTGTGGGAAAAGTGTGGAGTGTGGAAGTGTGGAAGTGTGGACTGAGTGTGGAGTGTGGAGTGTGGGAGTGTGGAGTGTGGAAAGGCTGTGGAGTGTGGTCAGTGTGGAGTGTGGCAAGAAGTGTGGCAGTGTGGTAGTGTGGAGTGTGGGGAGTGTGGAGTGTGGATAGTAGACACTCAGTGTGGAAGTGTGGCAGTGTGGAAGAGGGCCCAGTGTGGAGTGTGGCTAGTGTGGAAGTGTGGAGTGTGGCGCAGTGTGGAAGTGTGGAGTGTGGATAAGTGTGGAGTGTGGAGTGTGGTTGTAAGTGTGGAGAGTGTGGGAGTGTGGAACAAGTGTGGAGTGTGGAGTGTGGAATCGAGTGTGGAGTGTGGCAGTGTGGTCAGTGTGGTGGTGCGTAAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTGTGGACTAGTGTGGGCGATAGTGTGGAGTGTGGCTAGTGTGGAGTACAGTGTGGCAACTAAAGTGTGGTGTCTAGTGTGGTAGTGTGGATCAGTGTGGCGAACAGTGTGGTAGAAGTGTGGTGAGTGTGGAGTGTGGAGTGTGGCCCGTAGTGTGGTACAAGTGTGGGACAGTGTGGCTCTTTTTCAATAGTGTGGAAAGTGTGGTAGATAAGTGTGGCCAGTGTGGTGAAGTGTGGGAGTTATAGTGTGGAGTGTGGTGTCTCTTACATAGAGTGTGGAGTGTGGCAAAGTGTGGGATGAGTGTGGATTTTAGTGTGGGAGAGTGTGGAGTGTGGTACAGTGTGGTGAGTGTGGAAGTGTGGAGTGTGGAGTGTGGCGATCCTCTCACAGTGTGGGGTAGTGTGGGTAGTGTGGAGTGTGGAGTGTGGGAGTGTGGAAGTGTGGAGTGTGGAGTGTGGGAAGAGTGTGGATAGTGTGGCGAACAGTGTGGAGTGTGGCGCGTGACCCGAAAATAAGTGTGGATAAGTGTGGAGTGTGGAACGAGTGTGGCAGTGTGGGCAAGTGTGGTAGTGTGGGAAGTGTGGCAGTGTGGAGTGTGGGAAGTGTGGTCTAGTGTGGGCCATGCTAGTGTGGCTAGTGTGGAGTGTGGCAAAAGTGTGGGTCAGTGTGGGGGGTATGTCAGTGTGGCCTAACTAAGTGTGGGTGTAGAGTGTGGAGTGTGGAGTGTGGAGTGTGGTAGTGTGGCGGGAGTGTGGAGTGTGGAAGTGTGGCAGTGTGGCCGAATAGTGTGGAGTGTGGAGTGTGGGTGTACCAGTGTGGAGTGTGGAGTGTGGAGTGTGGAAGTGTGGGTGAGTGTGGCAGTGTGGTCGCTTTTTTGAGTGTGGCGCTCGGTATATAGTGTGGACCCTGTGTGCTGTAAAGTGTGGAGTGTGGAGTGTGGATCAAGTGTGGTTAAGTGTGGAGTGTGGGCTCGAGTGTGGACAAGTGTGGGATCAGAGTGTGGAGTGTGGAGTGTGGTGATTTAGTGTGGACTAGTGTGGGAAGTGTGGAGTCTAGTGTGGACAGTGTGGCCAGTGTGGCTGAGTGTGGAGTGTGGAAGTGTGGAGTGTGGAGTGTGGCGTAAGTGTGGATTAGTGTGGCTAGTGTGGGCCCAGTGTGGGCAGTGTGGGAAAGTGTGGCACAGTGTGGGGTAGTGTGGCCTGAGTGTGGAAACTGCGCTAGAGTGTGGAGTGTGGAGTGTGGTTCAGTGTGGCGTATCAGTGTGGGTAGTGTGGAGAGTGTGGAGTGTGGTAGTGTGGAGAGTGTGGAGTGTGGACCCCCAAGTGTGGAGTGTGGGTGAGTGTGGAGTGTGGAGTGTGGAGTGTGGGAGTGTGGAGTGTGGTCCGAAAAGTGTGGCGGACTCAGTGTGGTTAGTGTGGTAAAAGTGTGGCAGTGTGGAGTGTGGGCACAGTGTGGCCAGTGTGGACCCCGCTTAGTGTGGAGTGTGGAGTGTGGCTTAGTGTGGAAAGTGTGGAGTGTGGCACCCAGTGTGGGGAGTGTGGCGTTAGTGTGGAGTGTGGCAAGTGTGGAACGATAGTGTGGATAGTGTGGAACCAAGTGTGGAGTGTGGCTAGTGTGGGTAGTGTGGAAAAGTGTGGGAGTGTGGCAGTGTGGCAGTGTGGTAGTGTGGCCGAGTGTGGCGAGTGTGGGGAGTGTGGGAAGTGTGGCAGTGTGGGCCGGGAGTGTGGTCACCAAGTGTGGAGTGTGGCCAGTGTGGTAGTGTGGTGTAGTGTGGTCAGTGTGGACCAAGTGTGGTGTCAGTGTGGAGTGTGGAGTGTGGCAGTGTGGGCTCAAGTGTGGAGTGTGGTACAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTGTGGGTCAGTGTGGAAGTGTGGCACAAGTGTGGGAGTGTGGGAAGTGTGGTACTAAAAGTGTGGCGCGTAAGTGTGGCGACTTTAGTGTGGAGTGTGGTTCAGTGTGGTCGTAGTGTGGAGTGTGGAGTGTGGAGTGTGGTAGGAGTGTGGAAGAAGTGTGGCAGTGTGGAGTGTGGAAGTGTGGCAGTGTGGAGTGTGGAGTGTGGCAACTAGTGTGGAGTGTGGGGTTCAGTGTGGTCGGACAGTGTGGAAGAGTGTGGATACGCTCTACTAGTGTGGCCTGTGATCACCGTCAGTGTGGCTAGTGTGGAGTGTGGGAGTGTGGCAGTGTGGAGTGTGGGGGTAGTGTGGCAGTGTGGCGCTCAGTGTGGGGAAGTGTGGAGTGTGGATTCCACAATCCTAACCACGTGAGTGTGGAGTGTGGAGAGTGTGGAGTGTGGTAGTGTGGAGTGTGGGGCAGTGTGGCTTCAGTGTGGGATAGTGTGGCCCAGTGTGGGGGGAGTGTGGAACCGCTGGTTAGTGTGGCGTACGAGTGTGGTCCCGATAGAAAAGATCTCATAAGCGGGAGTGTGGAAGTGTGGTGTGTCAGTGTGGAAGTGTGGAGCAGTGTGGAGTGTGGGTAAGTGTGGTCCAGGGACGAGTGTGGCAGTGTGGAGTGTGGCAGTGTGGAGAAGTGTGGCAGTGTGGCTGGGAGTGTGGCGTAAGTGTGGCTATGCAGTGTGGAAAGTGTGGAGTGTGGAAGTGTGGCACAAGTGTGGTAGTGTGGTCAGTGTGGAGTGTGGCCAGTGTGGACAACAGTGTGGAAGTGTGGGGCGTGTGGCACAAGTGTGGAGTGTGGCGTAGTGTGGCCCCCAGGAGTGTGGTGGTGAAAGTGTGGAAACAAGTGTGGGGTGCTAATCTAGTGTGGAGTGTGGCAGTGTGGTTAGTGTGGAAGTGTGGTCAGTGTGGCCAGTGTGGAGTGTGGAAGTGTGGGGAGTGTGGTAGTGTGGCAGTGTGGCGGAGTGTGGCAAAAGTGTGGCAGTGTGGGAGTGTGGGGGCATGAGTGTGGTAAGTGTGGCGAGTGTGGTGAGTGTGGCGAGTGTGGGTTCAGTGTGGAAAGAAGTGTGGAAGGTCCCAGTGTGGACTTCAGTGTGGAGTGTGGATAGTGTGGAGTGTGGAGTGTGGCTAAGGGTATTAGTGTGGGAGGGAAGTGTGGATGAGTGTGGATGTCCAAAGTGTGGGGGAGTGTGGCAGTGTGGAGTGTGGCAGTGTGGTTTGAGTGTGGAGTGTGGAGCTACTAGTGTGGAGAGTGTGGAGTGTGGTAGTGTGGAGTGTGGTGCCTATTGAGTGTGGAGTGTGGGTCAGTGTGGTCAGTGTGGAGTGTGGGGCAAGTGTGGGTCTTTAGTGTGGAGTGTGGAGTGTGGTCAGTGTGGCAAGTGTGGAGTGTGGAGAAGTGTGGTACCGTAGTGTGGCTGTAAACTGAGTGTGGGAGTGTGGATAGTGTGGGCGAGTGTGGTTCAGTGTGGAGTGTGGGTGTTCGAGTGTGGAAGTGTGGTAAAGCAGTGTGGAAAGTGTGGGCGAATCGTCAAGTGTGGCAATGACAGTGTGGAGTGTGGAGTGTGGACATAGTGTGGGAAACGAGTGTGGAAGTGTGGGCGAGTGTGGAGTGTGGAGTGTGGCACGAGGAGTGTGGGAAACGGAAGTGTGGAATAGTGTGGAATAGTCAGAGTGTGGAAGTGTGGACAGTGTGGCGCCCAAGCGATGAGTGTGGTAGTGTGGAACCCGAAGTGTGGAGAGTGTGGAAAGTGTGGAGTGTGGAGTGTGGGCTTAGTGTGGTAATAAGTGTGGAGAACGCAAGTGTGGAGTGTGGTCGAGTGTGGCCATAGCGGCAAGTGTGGCGCAGTGTGGAGTGTGGAGAACTAGTGTGGGCCGAAGTGTGGGCAGTGTGGAGTGTGGACGAGTGTGGAACAGTGTGGAAGTGTGGGGGAGTGTGGAGTGTGGAGTGTGGGGCGATAGTGTGGCGAAGTGTGGGACGTTAGTGTGGAGTGTGGTAGTGTGGCCTCAGTGTGGCTCCCATTTTAGTGTGGGCATCGAGGGGCAGTGTGGAGATAGTGTGGAGAAGTGTGGCCGCGTGCAGTGTGGCTAGTGTGGTGAGTGTGGTAGTGTGGAGTGTGGAGTGTGGAGTGTGGTGCGAGTGTGGAGTGTGGAAGTGTGGATGAGTGTGGGTATTGAGTGTGGAGTGTGGGTGGGAGTGTGGAAGTGTGGCCATAAGTGTGGAGTGTGGCATAGTGTGGTGAGTGTGGCAGTGTGGTTAGTGTGGAGTGTGGCAAAGTGTGGTATAGTGTGGAGTGTGGGGGTGTCATAGTGTGGAAGTGTGGAAGTGTGGAGTGTGGAGTGTGGAGTGTGGTGAGTGTGGTAGTGTGGATAGTGTGGAGTGTGGTAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTCTAGTGTGGCTCAGTGTGGGCACACTAGTGTGGCAGTGTGGGGGACAGTGTGGTAGTGTGGGGTAGTGTGGAAGTGTGGCAGTGTGGTAGTGTGGGAATGAGTGTGGCGGCACGTTAGTGTGGAGAAAAGTGTGGTTGAGTGTGGTAAGTGTGGGACCGCAGATCCAAAACGAGTGTGGAAGTGTGGAGTGTGGAATGAGTGTGGATGTCTGACCTAGTGTGGAAGTGTGGGACAGTGTGGAGTGTGGAGTGTGGTATCATCTAAGTGTGGAGTGAATAATTAATAGTGTGGAGTGTGGAGGCCTTAGTGTGGTAGTGTGGTAGGGCAAGTGTGGAGTGTGGTAGTGTGGCTAGTGTGGTAAACTTAGTCATTCAGTGTGGGAGTGTGGACAGTGTGGTGGGCTGAGTGTGGACTTTTAAGTGTGGAGTGTGGAGTGTGGAGTGTGGCTACTCCAGTGTGGGCAGGGAAGTGTGGAAGTGTGGCAGTGTGGAGTGTGGAAGTGTGGTTTTCGAAAGTGTGGAGAGTGTGGTAAGTAGTGTGGTAGTGTGGGTAGTGTGGTGCTAGTGTGGAGTGTGGGAGACAGTGTGGGCAGTGTGGTGCAGTGTGGAGTGTGGAGTGTGGAGTGTGGCCAAAGTGTGGCATAGTGTGGCAGTCGAAGTGTGGAGGACATCAGTGTGGAGTGTGGAGTGTGGCAGTGTGGAAGTGTGGGAGTGTGGAAGTGTGGAGCAATCCTCAGTGTGGCTGAAGTGTGGTAGTGTGGATAGTGTGGAAGTGTGGAGTGTGGAGTGTGGAGTGTGGAGTGTGGCTGTTAGTGTGGCAAGTGTGGAGTGTGGCGCATAGTGTGGAGTGTGGCAAGGAAGTGTGGCGATAGTAGTGTGGAGTGTGGTCTAGTGTGGATTAGATCGAGTGTGGGCGTAAGTGTGGAGGTAGTGTGGTGTACCAGTGTGGCAAATAGTGTGGCGCTAGTGTGGAAAGTGTGGAAATAGTGTGGGAGTGTGGAGTGTGGTGAGTGTGGCAGTGTGGTCAGTGTGGGGCTACCAGTAGTGTGGAGTGTGGTTGCAGTAGTGTGGTCCAGTGTGGATGCAGTGTGGAGTGTGGTAGTACTCACAGTGTGGAAGTGTGGCCTCCAGTGTGGGCGCCTCGAGTGTGGCAGTGTGGCGATTTCGGAGTGTGGAGTGTGGAGTGTGGGAGTGTGGACCCCTAAAAGTGTGGCCATCCAGCGCTTAGTGTGGAAGTGTGGCACACAACAGTGTGGCAGTGTGGGTGCAGCTAGTGTGGGGAGCGAAGTGTGGAGTGTGGCAGTGTGGTTTCAGTGTGGCAAGTGTGGTAGTGTGGCTATGTCTCGCAGTGTGGGAGTGTGGAGAAGTGTGGCAGTGTGGGTCGTTGAGTGTGGAGTGTGGGGGAGTGTGGCGGAGTGTGGAAGTGTGGTTCTACTCAGTGTGGGAGTGTGGAAGTGTGGCATAGTGTGGATCTAGTGTGGAAGTGTGGAAGTGTGGTAGACAGTGTGGGCGTTGCTAGTGTGGAGTGTGGTACGCAGTGTGGCGAGTGTGGAGTGTGGAGTGTGGCTCCAGTGTGGCTTTAGTGTGGAACGAGTGTGGAAGTGTGGAGTGTGGGCCAGTGTGGTTTTTAGTGTGGCAGTGTGGTAGTGTGGGCAGTGTGGTCAGTGTGGCCTAGTGTGGTGGGAGTGTGGGTCTAGTGTGGACAGTGTGGCAGTGTGGAGTGTGGTAGTGTGGAGTGTGGAGAGTGTGGCAGCTTAGTGTGGAGTGTGGAGTGTGGGAAAGTGTGGTCATTCGGGAAAGTGTGGGGGTTGACTTAACCGTAGTGTGGGGAGTGTGGTAAAGTGTGGAAGTGTGGGATCAGTGTGGGAGTGTGGAGACGGAGTATACCGCGCAGTGTGGTAAGTGTGGTGGAGCACCGGCAGTGTGGGAGTGTGGGATACGGCAGTGTGGACCGCTAGTGTGGGAGTGTGGAGTAGTGTGGTCAAGTGTGGTTGCTTACTAGTGTGGGCAGTGTGGAGTAGTGTGGCCCAGTGTGGGCCAGTGTGGTTAGTGTGGCTAAGTGTGGAAGTGTGGCTTGAGGAAGTGTGGAAGTGTGGTAGTGTGGGAGTGTGGAACTAGAGTGTGGAAGTGTGGCAATAGTGTGGATTAGTGTGGAGAATAGTGTGGTAGTGTGGCAGTGTGGTCGTTGAGTGTGGAAAGTGTGGCAAATAAAGTGTGGTCAGTGTGGGTAGTGTGGCAATCGAGTGTGGCTTATAGTGTGGAGTGTGGAGTGTGGGAAGTGTGGTTAGTGTGGAGTGTGGAGCAGTGTGGTGCATGTAGGAAAAGAGTGTGGAGTGTGGAGTGTGGGCCAAGTGTGGTCAAGTGTGGAGTGTGGTAGTGTGGAGTGTGGAACAGTGTGGAGTGTGGAAGTGTGGTTATAAGTGTGGAGTGTGGTAGTGTGGAGTGTGGGACGCAAGTGTGGCCAGTGTGGGTCTAAGTGTGGAGTGTGGCAGTGTGGGGAGTGTGGAGTGTGGGACCAGTCAGTGTGGAGTGTGGCTAGTGTGGGAGTGTGGAGTGTGGTAGTGTGGAGTGTGGTAGTGTGGCTGTCCGCCTGCTCCTCTAGTGTGGCAGTGTGGAGTGTGGGAGTGTGGAGTGTGGAGTGTGGGGAGTGTGGACACGCGACTAGTGTGGAAGTGTGGCAGTGTGGTTTCCAGTGTGGAGTGTGGAGTGTGGAGTGTGGTAAGCGTCTTTAGCTAGTGTGGAGTGTGGCAGTGTGGAGTGTGGAGTGTGGGAGTGTGGGAGTGTGGATCAGTGTGGGGAAGTGTGGATCGCAGTGTGGAGTGTGGCATATTAGTGTGGAATTTAGTGTGGACAGTGTGGGTAGTGTGGTGTAAGTGTGGACAGGTCGCAGAGTGTGGGAGGGACATAGAGTGTGGCTAGTGTGGCAGCGGGAGTGTGGAGTGTGGCAGTGTGGCAGAGTGTGGCCCTCAGTGTGGTTCCAGTGTGGTCATATGCGTTTCTTTAGTGTGGCCGAGTGTGGAGTGTGGAACAGTGTGGAGTGTGGAGTGTGGAGTGTGGACTAAGTGTGGCTACAGTGTGGAGGACGAATAGTGTGGAGTGTGGCTTGTAGTGTGGAGAGCGAAGTGTGGAGTGTGGAGTGTGGTCCAAGTGTGGGCCAGTGTGGAGTGTGGAGTGTGGAGTGTGGCCCAGTGTGGAGTGTGGAGTGTGGAGTGTGGAAGTGTGGAGTGTGGTAGTGTGGCAATAGTGTGGAGCATACGTAGTGTGGGCGTAGTGTGGATCAGTGTGGGAGTGTGGGAGTGTGGCCCGTAAAGTGTGGTGCGAGTGTGGTGAGTGTGGCAGTGTGGGTTAGTATAGTGTGGCAGTGTGGCAGTGTGGGAGAACAAGTGTGGGCTTAAGTGTGGCCAGTGTGG"

# initializing substring
string = "AGTGTGGAG"

# i use for this task python built in library name is Regular expression operations
# i use finditer function , Return an iterator yielding MatchObject instances over all non-overlapping matches for the
# RE pattern in string. The string is scanned left-to-right, and matches are returned in the order found. Empty matches
# are included in the result.
# find All occurrences of substring in string
res = [i.start() for i in re.finditer(string, Pattern)]

# printing result
print("Occurrences : " + str(res))
# calculated time how much program is running
stop = timeit.default_timer()

print('Time: (sec) ', stop - start)
